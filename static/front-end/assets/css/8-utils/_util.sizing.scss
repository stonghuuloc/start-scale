// --------------------------------

// Width + Height

// --------------------------------

@each $breakpoint in map-keys($breakpoints) {
  $infix: breakpoint-infix($breakpoint, $breakpoints);

  @include breakpoint($breakpoint) {
    .width-50\%#{$infix} { width: 50% !important; }
    .width-100\%#{$infix} { width: 100% !important; }
    .width-auto#{$infix} { width: auto !important; }

    .height-50\%#{$infix} { height: 50% !important; }
    .height-100\%#{$infix} { height: 100% !important; }
    .height-auto#{$infix} { height: auto !important; }

    .height-100vh#{$infix} {
      height: 100vh !important;

      &.section__inner {
        min-height: 1024px;
      }
    }

    .max-width-100#{$infix} { max-width: 100px !important; }
    .max-width-200#{$infix} { max-width: 200px !important; }
    .max-width-300#{$infix} { max-width: 300px !important; }
    .max-width-400#{$infix} { max-width: 400px !important; }
    .max-width-500#{$infix} { max-width: 500px !important; }
    .max-width-600#{$infix} { max-width: 600px !important; }
    .max-width-700#{$infix} { max-width: 700px !important; }
    .max-width-800#{$infix} { max-width: 800px !important; }
    .max-width-900#{$infix} { max-width: 900px !important; }
  }
}

@each $size, $length in $sizers {
  .max-width-#{$size} { max-width: $length !important; }
}
// alt approach - max-width is updated at specific breakpoints
.max-width-adaptive-sm {
  max-width: var(--max-width-xs) !important;

  @include breakpoint(md) {
    max-width: var(--max-width-sm) !important;
  }
}

.max-width-adaptive-md {
  max-width: var(--max-width-xs) !important;

  @include breakpoint(md) {
    max-width: var(--max-width-md) !important;
  }
}

.max-width-adaptive,
.max-width-adaptive-lg {
  max-width: var(--max-width-xs) !important;

  @include breakpoint(md) {
    max-width: var(--max-width-md) !important;
  }

  @include breakpoint(xl) {
    max-width: var(--max-width-lg) !important;
  }
}

.max-width-adaptive-xl {
  max-width: var(--max-width-xs) !important;

  @include breakpoint(md) {
    max-width: var(--max-width-md) !important;
  }

  @include breakpoint(xl) {
    max-width: var(--max-width-xl) !important;
  }
}

/////////////////////////
//
// UTILITIES.Size - Set size for grid system with media breaktpoints
// - xs
// - sm
// - md
// - lg
// - xl
//
// - .width[@breakpoint]-[3/4]
// - .width-push[@breakpoint]-[1/2]
// - .width-pull[@breakpoint]-[2/5]
//
/////////////////////////

$size-fractions: 1 2 3 4 5 !default;
$size-offsets: true;

@mixin sizes($columns, $breakpoint: null) {

  // Loop through the number of columns for each denominator of our fractions.
  @each $denominator in $columns {

    // Begin creating a numerator for our fraction up until we hit the
    // denominator.
    @for $numerator from 1 through $denominator {

      // Build a class in the format `.w3/4[@<breakpoint>]`.
      .width#{$breakpoint}-#{$numerator}\/#{$denominator} {
        width: ($numerator / $denominator) * 100% !important;
        max-width: ($numerator / $denominator) * 100% !important;
      }

      @if ($size-offsets == true) {
        // Build a class in the format `.w-push1/2[@<breakpoint>]`.
        .width-push#{$breakpoint}-#{$numerator}\/#{$denominator} {
          margin-left: ($numerator / $denominator) * 100% !important;
        }

        .width-pull#{$breakpoint}-#{$numerator}\/#{$denominator} {
          margin-right: ($numerator / $denominator) * 100% !important;
        }
      }
    }
  }
}

@include sizes($size-fractions);

// add breapkpoints to width utilities
@each $size-bp-name, $size-bp-value in $breakpoints {
  @media only screen and (min-width: $size-bp-value) {
    @include sizes($size-fractions, \@#{$size-bp-name});
  }
}
