(window["webpackJsonp"] = window["webpackJsonp"] || []).push([[1],{

/***/ "./src/libs/_2_hiding-nav.js":
/***/ (function(module, exports) {

eval("// File#: _3_hiding-nav\n// Usage: codyhouse.co/license\n(function () {\n  var hidingNav = document.getElementsByClassName('js-hide-nav');\n\n  if (hidingNav.length > 0 && window.requestAnimationFrame) {\n    var mainNav = Array.prototype.filter.call(hidingNav, function (element) {\n      return Util.hasClass(element, 'js-hide-nav--main');\n    }),\n        subNav = Array.prototype.filter.call(hidingNav, function (element) {\n      return Util.hasClass(element, 'js-hide-nav--sub');\n    });\n    var scrolling = false,\n        previousTop = window.scrollY,\n        currentTop = window.scrollY,\n        scrollDelta = 10,\n        scrollOffset = 150,\n        // scrollY needs to be bigger than scrollOffset to hide navigation\n    headerHeight = 0;\n    var navIsFixed = false; // check if main navigation is fixed\n\n    if (mainNav.length > 0 && Util.hasClass(mainNav[0], 'hide-nav--fixed')) navIsFixed = true; // store button that triggers navigation on mobile\n\n    var triggerMobile = getTriggerMobileMenu();\n    var prevElement = createPrevElement();\n    var mainNavTop = 0; // list of classes the hide-nav has when it is expanded -> do not hide if it has those classes\n\n    var navOpenClasses = hidingNav[0].getAttribute('data-nav-target-class'),\n        navOpenArrayClasses = [];\n    if (navOpenClasses) navOpenArrayClasses = navOpenClasses.split(' ');\n    getMainNavTop();\n\n    if (mainNavTop > 0) {\n      scrollOffset = scrollOffset + mainNavTop;\n    } // init navigation and listen to window scroll event\n\n\n    getHeaderHeight();\n    initSecondaryNav();\n    initFixedNav();\n    resetHideNav();\n    window.addEventListener('scroll', function (event) {\n      if (scrolling) return;\n      scrolling = true;\n      window.requestAnimationFrame(resetHideNav);\n    });\n    window.addEventListener('resize', function (event) {\n      if (scrolling) return;\n      scrolling = true;\n      window.requestAnimationFrame(function () {\n        if (headerHeight > 0) {\n          getMainNavTop();\n          getHeaderHeight();\n          initSecondaryNav();\n          initFixedNav();\n        } // reset both navigation\n\n\n        hideNavScrollUp();\n        scrolling = false;\n      });\n    });\n\n    function getHeaderHeight() {\n      headerHeight = mainNav[0].offsetHeight;\n    }\n\n    ;\n\n    function initSecondaryNav() {\n      // if there's a secondary nav, set its top equal to the header height\n      if (subNav.length < 1 || mainNav.length < 1) return;\n      subNav[0].style.top = headerHeight + 'px';\n    }\n\n    ;\n\n    function initFixedNav() {\n      if (!navIsFixed || mainNav.length < 1) return;\n      mainNav[0].style.marginBottom = '-' + headerHeight + 'px';\n    }\n\n    ;\n\n    function resetHideNav() {\n      // check if navs need to be hidden/revealed\n      currentTop = window.scrollY;\n\n      if (currentTop - previousTop > scrollDelta && currentTop > scrollOffset) {\n        hideNavScrollDown();\n      } else if (previousTop - currentTop > scrollDelta || previousTop - currentTop > 0 && currentTop < scrollOffset) {\n        hideNavScrollUp();\n      } else if (previousTop - currentTop > 0 && subNav.length > 0 && subNav[0].getBoundingClientRect().top > 0) {\n        setTranslate(subNav[0], '0%');\n      } // if primary nav is fixed -> toggle bg class\n      // if(navIsFixed) {\n\n\n      var scrollTop = window.scrollY || window.pageYOffset;\n      Util.toggleClass(mainNav[0], 'hide-nav--has-bg', scrollTop > headerHeight + mainNavTop); // }\n\n      previousTop = currentTop;\n      scrolling = false;\n    }\n\n    ;\n\n    function hideNavScrollDown() {\n      // if there's a secondary nav -> it has to reach the top before hiding nav\n      if (subNav.length > 0 && subNav[0].getBoundingClientRect().top > headerHeight) return; // on mobile -> hide navigation only if dropdown is not open\n\n      if (triggerMobile && triggerMobile.getAttribute('aria-expanded') == \"true\") return; // check if main nav has one of the following classes\n\n      if (mainNav.length > 0 && (!navOpenClasses || !checkNavExpanded())) {\n        setTranslate(mainNav[0], '-100%');\n        mainNav[0].addEventListener('transitionend', addOffCanvasClass);\n      }\n\n      if (subNav.length > 0) setTranslate(subNav[0], '-' + headerHeight + 'px');\n    }\n\n    ;\n\n    function hideNavScrollUp() {\n      if (mainNav.length > 0) {\n        setTranslate(mainNav[0], '0%');\n        Util.removeClass(mainNav[0], 'hide-nav--off-canvas');\n        mainNav[0].removeEventListener('transitionend', addOffCanvasClass);\n      }\n\n      if (subNav.length > 0) setTranslate(subNav[0], '0%');\n    }\n\n    ;\n\n    function addOffCanvasClass() {\n      mainNav[0].removeEventListener('transitionend', addOffCanvasClass);\n      Util.addClass(mainNav[0], 'hide-nav--off-canvas');\n    }\n\n    ;\n\n    function setTranslate(element, val) {\n      element.style.transform = 'translateY(' + val + ')';\n    }\n\n    ;\n\n    function getTriggerMobileMenu() {\n      // store trigger that toggle mobile navigation dropdown\n      var triggerMobileClass = hidingNav[0].getAttribute('data-mobile-trigger');\n      if (!triggerMobileClass) return false;\n\n      if (triggerMobileClass.indexOf('#') == 0) {\n        // get trigger by ID\n        var trigger = document.getElementById(triggerMobileClass.replace('#', ''));\n        if (trigger) return trigger;\n      } else {\n        // get trigger by class name\n        var trigger = hidingNav[0].getElementsByClassName(triggerMobileClass);\n        if (trigger.length > 0) return trigger[0];\n      }\n\n      return false;\n    }\n\n    ;\n\n    function createPrevElement() {\n      // create element to be inserted right before the mainNav to get its top value\n      if (mainNav.length < 1) return false;\n      var newElement = document.createElement(\"div\");\n      newElement.setAttribute('aria-hidden', 'true');\n      mainNav[0].parentElement.insertBefore(newElement, mainNav[0]);\n      var prevElement = mainNav[0].previousElementSibling;\n      prevElement.style.opacity = '0';\n      return prevElement;\n    }\n\n    ;\n\n    function getMainNavTop() {\n      if (!prevElement) return;\n      mainNavTop = prevElement.getBoundingClientRect().top + window.scrollY;\n    }\n\n    ;\n\n    function checkNavExpanded() {\n      var navIsOpen = false;\n\n      for (var i = 0; i < navOpenArrayClasses.length; i++) {\n        if (Util.hasClass(mainNav[0], navOpenArrayClasses[i].trim())) {\n          navIsOpen = true;\n          break;\n        }\n      }\n\n      return navIsOpen;\n    }\n\n    ;\n  } else {\n    // if window requestAnimationFrame is not supported -> add bg class to fixed header\n    var mainNav = document.getElementsByClassName('js-hide-nav--main');\n    if (mainNav.length < 1) return;\n    if (Util.hasClass(mainNav[0], 'hide-nav--fixed')) Util.addClass(mainNav[0], 'hide-nav--has-bg');\n  }\n})();\n\n//# sourceURL=webpack:///./src/libs/_2_hiding-nav.js?");

/***/ })

}]);